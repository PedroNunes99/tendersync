---------------------------- section ----------------------------
docs
---------------------------- document_id ----------------------------
642
---------------------------- title ----------------------------
Security
---------------------------- permalink ----------------------------
what-about-security
---------------------------- keywords ----------------------------

---------------------------- body ----------------------------
Here is what you need to know about the New Relic Agent and security.

<a name="Disclosure_and_Audit"></a>
## Disclosure & Audit
The New Relic Agent is a publicly accessible plug-in for Ruby and Java web applications.  Its source code is readily available.  We don't do any dynamic code generation over the wire so using the Agent won't introduce any code into your application without your knowledge.

<a name="Developer_Mode"></a>
## Developer Mode
The Developer Mode of the Agent, which is on by default when the `RAILS_ENV == "development"`, does not communicate with our site in any way. It is 100% secure. The pie charts are rendered using Google Charts, which involves an HTTP post of aggregate data.

<a name="Production_Mode"></a>
## Production Mode
The Production Mode of the Agent, which is on by default when the `RAILS_ENV == "production"` and `RAILS_ENV == "staging"`, communicates with the RPM site. The following sections itemize security considerations for Production Mode.

<a name="Data_Collection"></a>
## Data Collection
We collect the following aggregate metric data:

1. ORM find/save/destroy and Direct Database activity
2. Controller and Dispatch activity
3. View activity
4. Uncaught Exceptions
5. Process Memory & CPU usage
6. Mongrel Queue Time

This aggregate metric data summarizes calls to specific methods in your application--how many times each one was called and various response time statistics (average, minimum, maximum, and standard deviation). In RPM, you'll see the class and method names along with their aggregate numbers.

For Silver/Gold accounts, we optionally collect:

1. *Uncaught Exceptions*. The HTTP parameters can also be captured.  By default, we do not capture parameters - you can turn this on by editing a setting in `config/newrelic.yml`. We pay attention to `filter_parameters`, so you can filter sensitive parameters from being sent, just as they would be filtered from your log files.
2. *Transaction Traces*. These are snapshots of a single transaction. At your option, we collect the SQL statements called within the transaction. Our default collection uses obfuscation to hide any strings or numbers from the SQL command. For transactions slower than a threshold you set, we also collect data from SQL `EXPLAIN`.

<a name="Data_Transmission"></a>
## Data Transmission
By default, data is transmitted in the clear from your site to our site. There is an option flag in the newrelic.yml file to enable the use of HTTPS. We don't do host authentication with HTTPS, just communication encryption.

Under Ruby we use the standard Marshal module to serialize data.  Under Java data is masheled using...?  We marshal data sent to RPM and we marshal return codes back from RPM. We believe the risk exposure from marshaling is low.

<a name="Hosting_and_Data_Storage"></a>
## Hosting & Data Storage
We are hosted at Engine Yard, a premier hosting provider for Rails applications. All data is stored in a MySQL cluster. Metric data is not encrypted, nor are transaction traces or errors (although they are stored in a serialized format). The cluster is redundant but not backed up off-site due to the massive volume of data we collect.

<a name="Data_Access"></a>
## Data Access

All account data is accessible by New Relic employees and contractors, all of whom are under strict confidentiality agreements. All customer deployments hosted and managed by Engine Yard are accessible by Engine Yard employees, under the confidentiality terms of the Engine Yard hosting contract.
